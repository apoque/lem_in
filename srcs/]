/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_free.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: srossi <marvin@42.fr>                      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/04/30 10:59:57 by srossi            #+#    #+#             */
/*   Updated: 2018/04/30 14:27:35 by srossi           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "lem_in.h"

int	ft_free_ants(t_ant *aant)
{
	t_ant *ant1;
	t_ant *ant2;

	ant1 = aant;
	if (aant == 0)
		return (0);
	while (ant1)
	{
		ant2 = ant1;
		ant1 = ant1->next;
		ft_putnbr(ant2->nb);
	//	free(ant2->path);
	//	ft_memdel((void *)ant2);
	//	free(ant2);
	}
	aant = NULL;
	return (0);
}

int	ft_free_rooms(t_room *aroom)
{
	t_room *room1;
	t_room *room2;

	room1 = aroom;
	if (aroom == 0)
		return (0);
	while (room1)
	{
		room2 = room1;
		room1 = room1->next;
		ft_strdel(&room2->name);
	//	free(room2->bonded_rooms);
	//	free(room2->next_short_path);
	//	ft_free_links(room2->next_map);
	//	ft_memdel((void *)room2);
	//	free(room2);
	}
	aroom = NULL;
	return (0);
}

int	ft_free_links(t_link *alink)
{
	t_link *link1;
	t_link *link2;

	link1 = alink;
	if (alink == 0)
		return (0);
	while (link1)
	{
		link2 = link1;
		link1 = link1->next;
		ft_memdel((void *)link2);
	//	free(link2);
	}
	alink = NULL;
	return (0);
}

int	ft_free_lines(t_line *aline)
{
	t_line *line1;
	t_line *line2;

	line1 = aline;
	if (aline == 0)
		return (0);
	while (line1)
	{
		line2 = line1;
		line1 = line1->next;
		ft_strdel(&line2->str);
		ft_memdel((void *)line2);
		free(line2);
	}
	aline = NULL;
	return (0);
}

int	ft_free_game(t_game *game)
{
	ft_free_ants(game->ants);
	ft_free_lines(game->lines);
	ft_free_rooms(game->rooms);
	free(game->paths);
	ft_memdel((void *)game);
	game = NULL;
	return (0);
}
